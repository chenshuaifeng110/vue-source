{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["// 重写数组部分方法\r\n\r\nimport {observe} from ''\r\nlet oldArrayProto = Array.prototype; \r\n\r\n// 拷贝原有的数组中的成员\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\n\r\n\r\n// newArrayProto.push = function\r\n\r\n// 需要重写数组的方法\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\n// 重写数组方法\r\n// 内部调用原来的方法，函数劫持切片生成\r\nmethods.forEach(method =>{\r\n    newArrayProto[method] = function(...args) {\r\n        // this 指向 data\r\n        // 谁调用了这个数组的方法this指向谁\r\n        const result = oldArrayProto[method].call(this, ...args)\r\n        // 增强功能\r\n        let inserted\r\n        let ob = this.__ob__\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break\r\n            case 'unshift':\r\n                inserted = args.splice(2) // arr.splice(index, num ,parms)\r\n        }\r\n        if(inserted){\r\n            ob.observeArray(inserted)\r\n        }\r\n        return result\r\n    }\r\n})","\r\nimport {newArrayProto} from './array'\r\nclass Obsereve{\r\n    constructor(data){\r\n        // 如果是对象类型，在数组方法重写过程中造成调用栈溢出\r\n        // 将此属性变为不可枚举\r\n        Object.defineProperty(data, '__ob__', {\r\n            value: this,\r\n            enumerable: false\r\n        })\r\n        // 数组类型数据，通过数组的七个方法实现\r\n        if(Array.isArray(data)){\r\n            // 将this保存到data上，供重写方法使用\r\n            // data调用了数组的push等方法\r\n            // 注释掉下面代码是因为__ob__属性在上面代码中已经被定义为静态属性\r\n            // data.__ob__ = this\r\n            // 重写数组的七个方法，修改数组本身\r\n           data.__proto__ = newArrayProto\r\n            this.observeArray(data)\r\n        }else{\r\n            // Object.defineProperty只能劫持已有的属性，对后增、删除无法劫持（$set $delete）\r\n            this.walk(data)\r\n        }\r\n    }\r\n    // 劫持代理对象方法\r\n    walk(data){\r\n        // 循环对象\r\n        // 重新定义属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    }\r\n    // 劫持代理数组的方法\r\n    // 此方法可以监控到数组内的对象属性\r\n    // 无法监测到数组索引改变\r\n    observeArray(data){\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n\r\nexport function defineReactive(target, key, value){\r\n    // value可能是个对象\r\n    // 如果是对象递归劫持\r\n    observe(value)\r\n    Object.defineProperty(target, key, {\r\n        get(){\r\n            return value\r\n        },\r\n        set(newValue){\r\n            if(newValue ===  value) return\r\n            // 直接赋值一个对象的情况\r\n            observe(newValue)\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\n// 使用defineProperty实现属性劫持代理\r\nexport function observe(data){\r\n    // 对对象进行劫持\r\n    if(typeof data !== 'object' || data === null) return\r\n\r\n    if(data.__ob__ instanceof Obsereve){\r\n        // 已经代理过了\r\n        return data.__ob__\r\n    }\r\n    // 如果对象已经被劫持过 则不需要在进行劫持\r\n    // 增添一个实例用实例来判断是否被劫持\r\n    return new Obsereve(data)\r\n}\r\n\r\n","import { observe } from \"./observe/index\"\r\n\r\nexport function initState(vm){\r\n    const opts = vm.$options\r\n\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n}\r\n\r\n// 进行数据劫持、数据代理\r\nfunction initData(vm){\r\n    let data = vm.$options.data\r\n    data = typeof data === 'function'? data.call(vm):data\r\n\r\n    vm._data = data\r\n    // 使用defineProperty实现属性劫持代理\r\n    observe(data)\r\n\r\n    // 将vm._data的数据代理到vm\r\n    for (const key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nfunction proxy(vm, target, key){\r\n    Object.defineProperty(vm, key, {\r\n        get(){\r\n            return vm[target][key]\r\n        },\r\n        set(newValue){\r\n            if(newValue ===  key) return\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 匹配到的分组是一个开始标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配到的分组是一个结束标签名\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>']+)))?/; // 匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配</tag> <tag/>\r\n\r\n// Vue3不是正则，一个字符进行判断\r\n// htmlparse2 与这个模块相似\r\n\r\n// 组装树结构数据，构建父子关系\r\n// 利于栈特点前面进栈是父亲后面进栈是儿子\r\nconst ELEMENT_TYPE = 1;\r\nconst TEXT_TYPE = 3;\r\nlet root // 根节点\r\nlet currentParent // 指向栈中最后一个节点(文本节点或标签结束节点)的父节点\r\nconst stack = [] // 存放元素\r\n\r\n// 进行模板解析\r\nexport function parseHTML(html) {\r\n    // 循环解析\r\n    while (html) {\r\n        let textEnd = html.indexOf('<') // <div>a</div>  如果是0则是开始或结束标签 \r\n        if (textEnd === 0) {\r\n            // 解析开始标签\r\n            const startTagMatch = parseStartTag(html) //  { tagName: \"div\", attrs:[{name:id,value:app}]}\r\n            if (startTagMatch) {\r\n                // 如果开始标签有值\r\n                // console.log('startTagMatchhtml', html) 内部嵌套的开始标签解析完成，到达文本标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            // 解析结束标签\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                end(endTagMatch[1])\r\n                advance(endTagMatch[0].length)\r\n                continue\r\n            }\r\n            break\r\n        }\r\n        if (textEnd > 0) {\r\n            // 到达我们的文本节点\r\n            let text = html.substring(0, textEnd) // 获取文本节点\r\n            if (text) {\r\n                chart(text)\r\n                advance(text.length)\r\n            }\r\n        }\r\n    }\r\n    //解析开始标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen) // match接受一个正则返回一个数组\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],// 标签名 start = {start[1]: 'div', start[]: '<div'}\r\n                attrs: [],// 属性名\r\n            }\r\n            // 匹配到开始标签删除开始标签，开始匹配属性\r\n            advance(start[0].length)\r\n            // console.log('match', match)\r\n            // console.log('html', html)\r\n\r\n            // 循环匹配\r\n            // 如果不是开始标签的结束一直循环取属性\r\n            // 把匹配的结果保存到attr\r\n            // 再把已经匹配的属性删除\r\n            let attr;\r\n            let end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log('attr', attr)   [' id=\"app\"', 'id', '=', 'app', undefined, undefined]\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                advance(attr[0].length)\r\n            }\r\n            if (end) {\r\n                // console.log('end的html', html) >\r\n                // 把结束标签的>删除\r\n                advance(end[0].length)\r\n            }\r\n            // console.log('endhtml', html) ''\r\n            // console.log('match', match) { tagName: \"div\", attrs:[{name:id,value:app}]}\r\n            return match\r\n        }\r\n        return false // 不是开始标签\r\n    }\r\n    // 向后截取字符\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n\r\n\r\n    // 转换为抽象树语法结构\r\n    // const obj = [\r\n    //     {\r\n    //         tag: 'div',\r\n    //         type: 1,\r\n    //         attrs: [\r\n    //             {\r\n    //                 name: 'id',\r\n    //                 value: '#app'\r\n    //             }\r\n    //         ],\r\n    //         parent: null,\r\n    //         children: [\r\n    //             {\r\n    //                 tag: 'div',\r\n    //                 type: 1,\r\n    //                 attrs: [\r\n    //                     {\r\n    //                         name: 'class',\r\n    //                         value: 'error'\r\n    //                     }\r\n    //                 ],\r\n    //                 parent: {\r\n    //                     tag: 'div',\r\n    //                     type: 1,\r\n    //                     attrs: [\r\n    //                         {\r\n    //                             name: 'id',\r\n    //                             value: '#app'\r\n    //                         }\r\n    //                     ],\r\n    //                     parent: null,\r\n    //                 },\r\n    //                 children: [\r\n\r\n    //                 ]\r\n    //             },\r\n    //             {\r\n    //                 tag: 'span',\r\n    //                 type: 3,\r\n    //                 attrs: [\r\n    //                     {\r\n    //                         name: 'id',\r\n    //                         value: '#span'\r\n    //                     }\r\n    //                 ],\r\n    //                 parent: {\r\n    //                     tag: 'div',\r\n    //                     type: 1,\r\n    //                     attrs: [\r\n    //                         {\r\n    //                             name: 'id',\r\n    //                             value: '#app'\r\n    //                         }\r\n    //                     ],\r\n    //                     parent: null,\r\n    //                 },\r\n    //                 children: [\r\n\r\n    //                 ]\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // 因为只讲html删除没有获取 所以定义方法获取html\r\n    function start(tag, attrs) {\r\n        // 获取开始标签\r\n        // console.log('start', tag, attrs)\r\n        let node = createASTElement(tag, attrs)\r\n        if (!root) {\r\n            // 第一个节点即根节点\r\n            root = node\r\n        }\r\n        if (currentParent) {\r\n            // 第一个节点的父节点没有则指向自己\r\n            // 给当前节点添加父节点\r\n            node.parent = currentParent\r\n            // 给当前节点push子节点\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node; // 最后一个节点\r\n\r\n    }\r\n    function chart(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        // 获取文本\r\n        // console.log('text', text)\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n    }\r\n    function end(tag) {\r\n        // 获取结束标签 校验标签是否合法 对比\r\n        stack.pop() // 弹出最后一个节点因为这个节点是根节点 根节点后进栈  \r\n        currentParent = stack[stack.length - 1]  // 最新栈最后一个是子节点，获取它的父节点减一\r\n        // console.log('end', tag)\r\n    }\r\n\r\n\r\n    // console.log(root)\r\n    // 将解析的ast模板数据返回\r\n    return root\r\n    // console.log( html) ''\r\n}","\r\nimport {parseHTML} from './parse'\r\n\r\n//  {            \r\n//     tag: 'div',\r\n//     type: 1,\r\n//     attrs: [\r\n//         {\r\n//             name: 'id',\r\n//             value: '#app'\r\n//         }\r\n//     ],\r\n//     parent: null,\r\n// }\r\n// text: \"{{name}}hello\"\r\n// 生成属性字符串\r\nfunction genProps(attrs){\r\n    let str = '' \r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i] \r\n        if(attr.name === 'style'){\r\n            // color:red;background:red; => {color: 'red'}\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value;\r\n            });\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`       \r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction genChildren(el){\r\n    const children = el.children;\r\n    if(children){\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n}\r\n\r\nfunction gen(node){\r\n    // 区分文本和元素标签\r\n    // const ELEMENT_TYPE = 1;\r\n    if(node.type === 1){\r\n        // 元素节点\r\n        return codegen(node)\r\n    }else{\r\n        // 文本节点\r\n        // 纯文本\r\n        // 插值表达式\r\n        const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;  // 匹配表达式变量\r\n        let text = node.text\r\n        // console.log('text', defaultTagRE.test(text))\r\n        if(!defaultTagRE.test(text)){\r\n            return `_v(${JSON.stringify(text)})`\r\n        }else{\r\n            // _v处理文本 _c处理元素标签 _json字符串\r\n            // _v(_s(name)+'hello'+_s(name))\r\n            let tokens = []\r\n            let match\r\n            defaultTagRE.lastIndex = 0 // 重复捕获\r\n            let lastIndex = 0\r\n            // console.log('defaultTagRE', defaultTagRE.exec(text))\r\n            while( match = defaultTagRE.exec(text)){\r\n                // console.log('match--------------',match)  ['{{name}}', 'name', index: 0, input: '{{name}}hello{{age}}', groups: undefined]\r\n                let index = match.index  // 拿到表达式开始的索引 {{name}} hello {{age}} hello\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                // console.log(tokens)   ['_s(name)', '_s(age)']\r\n                if(index > lastIndex){\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                // 记录位置匹配中间hello字符\r\n                lastIndex = index + match[0].length\r\n           }\r\n           // 匹配最后一个hello\r\n           if(lastIndex < text.length){\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n           }\r\n           return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction codegen(ast){\r\n\r\n    let children = genChildren(ast);\r\n    // 转换字符串\r\n    // 继续处理子节点\r\n    let code = (`_c('${ast.tag}',${ast.attrs.length>0 ?genProps(ast.attrs):'null' }${ast.children.length>0? `,${children}`:''})`)\r\n    return code\r\n}\r\n\r\nexport function cpmpileToFuntion(template) {\r\n    // 1. 将template转换成ast语法树\r\n    let ast = parseHTML(template)\r\n    // console.log('ast', ast)\r\n    // 2. 生成render方法，render方法返回的虚拟DOM\r\n\r\n    // render(h){\r\n    //     // 形容html内容 标签名+属性\r\n    //     return _c('div', {id:'app'},  _c('div',{style:{color: 'read'}}, _v(_s(name)+'hello')),_c('span',undefined, _v(_s(name)+'hello')))\r\n    // }\r\n    // console.log('ast',ast)\r\n    // console.log(codegen(ast)) _c('div',{id:\"app\",style:{\"color\":\" red\",\"background-color\":\" pink\"}},_c('div',{style:{\"color\":\" red\"}},_v(_s(name)+_s(age)+\"hello\"+\"hello\")),_c('span',null,_v(\"code\")))\r\n    // _v处理文本 _c处理元素标签 _json字符串\r\n    let code = codegen(ast)\r\n    // console.log(code)\r\n\r\n    //with增强函数从对象属性上取值 vm.name\r\n    // 将插值表达式转换为值的一部\r\n    code = `with(this){return ${code}}`\r\n\r\n    // 生成render函数\r\n    // 让字符串运行 \r\n    let render = new Function(code)  // 字符串变为函数运行\r\n\r\n    // 模板引擎实现原理 with + new Funcion\r\n    return render\r\n    // console.log(render.toString) [Function: anonymous]\r\n}","// _c() \r\n// _c('div', {id:'app'},  _c('div',{style:{color: 'red'}}, _v(_s(name)+'hello')),_c('span',undefined, _v(_s(name)+'hello')))\r\nexport function createElement(vm, tag, data={}, ...children){\r\nif(data == null){\r\n    data = {}\r\n}\r\nlet key = data.key;\r\nif(key){\r\n    delete data.key\r\n}\r\n\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n\r\n// _v()\r\nexport function createTextVNode(vm, text){\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\nfunction vnode(vm, tag, key, data, children, text){\r\n    // key用于diff算法\r\n    // ast做的时语法层面的转换，描述语法本身\r\n    // 虚拟DMOM描述dom元素， 可以增加自定义属性\r\n     let vnode = {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n// console.log('vnode',vnode) 虚拟DOM中表达式已经被替换\r\n    return vnode\r\n}","import {createTextVNode, createElement} from './vdom'\r\nexport function mountComponent(vm, el){\r\n    vm.$el = el\r\n    // 1. 调用render方法产生虚拟DOM\r\n    let vnode = vm._render()\r\n   // 将虚拟DOM转换成真是DOM\r\n   vm._update(vnode) \r\n    // 2. 根据虚拟DOM产生真是DOM\r\n    // 3. 插入到el元素中\r\n}\r\nfunction patch(oldVNode, vnode){\r\n    // 创建新元素\r\n    const isRealElement = oldVNode.nodeType;\r\n    if(isRealElement){\r\n        const el = oldVNode;\r\n        const parentEle = el.parentNode;\r\n        let newEle = createEle(vnode)\r\n        parentEle.insertBefore(newEle, el, el.nextSibling)\r\n        parentEle.removeChild(el)\r\n    }else{\r\n        // diff 算法\r\n    }\r\n}\r\nfunction createEle(vnode){\r\n    let  {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    } = vnode\r\n    if(typeof tag === 'string'){\r\n        // 标签\r\n        // 将真实节点和虚拟节点对应，如果虚拟节点的属性发生变化就可以直接找到真实节点\r\n       vnode.el = document.createElement(tag)\r\n       // 更新属性\r\n       patchProps( vnode.el, data)\r\n       children.forEach(child => {\r\n        // 将真实子节点添加到父节点\r\n        // 递归添加\r\n        vnode.el.appendChild(createEle(child))\r\n       })\r\n    }else{\r\n        // 文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n//_c('div',{style:{color: 'red', width: '10px'}}, _v(_s(name)+'hello'))\r\nfunction patchProps(el, props){\r\n    for (const key in props) {\r\n        if(key === 'style'){\r\n            for (const styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        }else{\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode){\r\n        //  console.log('vnode', vnode) 表达式已经解析了\r\n        const el = this.$el\r\n        // 将虚拟DOM转换为真是DOM\r\n        patch(el, vnode)\r\n        console.log(vnode, el)\r\n        \r\n    }\r\n    Vue.prototype._render = function(){\r\n        // 渲染时会从实例中取值，这样就可以将属性和视图绑定\r\n        // 就是说已经解析出插值表达式\r\n        return this.$options.render.call(this)\r\n    }\r\n\r\n    //  _c('div', {id:'app'},  _c('div',{style:{color: 'read'}}, _v(_s(name)+'hello')),_c('span',undefined, _v(_s(name)+'hello')))\r\n    // vm, tag, props\r\n    Vue.prototype._c = function(){\r\n        return createElement(this, ...arguments)\r\n    }\r\n    Vue.prototype._v = function(){\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function(value){\r\n        if(typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n}","import { initState } from \"./state\"\r\nimport {cpmpileToFuntion} from './compiler'\r\nimport {mountComponent} from './lifecycle'\r\n// 初始化Vue\r\nexport const initMixin = (Vue) => {\r\n    Vue.prototype._init = function(options){\r\n        const vm = this\r\n        // 将options选项挂载在this\r\n        vm.$options = options\r\n\r\n        // 初始化状态\r\n        initState(vm)\r\n\r\n        // 采用虚拟DOM\r\n        // 将模板变成js语法，通过js语法生成虚拟DOM\r\n        // 语法转换 es6--> es5\r\n        // 将template转换为el元素\r\n        if(options.el){\r\n            vm.$mount(options.el)\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this\r\n        el = document.querySelector(el);\r\n\r\n        let ops = vm.$options\r\n        let template\r\n        if(!ops.render){\r\n            // 使用$mount挂载情况\r\n            if(!ops.template && el){\r\n                // 再根节点上挂载模板的情况\r\n                template = el.outerHTML\r\n\r\n            }else{\r\n                // 在options挂载模板\r\n                if(el){\r\n                    template = ops.template\r\n                }\r\n            }\r\n            if(template){\r\n                // 进行模板编译\r\n                const render = cpmpileToFuntion(template)\r\n                ops.render = render\r\n                // render函数\r\n                console.log(ops.render)\r\n            }\r\n        }\r\n        // 在options内部有render\r\n        // 使用$mount挂载情\r\n\r\n        mountComponent(vm,el) // 组件挂载 调用render函数产生虚拟DOM\r\n        // script标签引用的vue是浏览器编译\r\n        // runtime是不包含模板编译，模板编译是打包的时候通过loader转义。\r\n    }\r\n} \r\n\r\n\r\n\r\n","import {initMixin} from './init'\r\nimport {initLifeCycle} from './lifecycle'\r\n\r\n\r\n// 使用构造函数的方法来创建类\r\nfunction Vue(options){\r\n    // 调用实例_init初始化\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)  // 为Vue实例扩展init方法\r\ninitLifeCycle(Vue)\r\n\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","args","result","call","inserted","ob","__ob__","splice","observeArray","Obsereve","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","key","defineReactive","item","observe","target","get","set","newValue","initState","vm","opts","$options","initData","_data","proxy","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","ELEMENT_TYPE","TEXT_TYPE","root","currentParent","stack","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","end","advance","length","text","substring","chart","attr","push","name","n","createASTElement","tag","type","children","parent","node","replace","pop","genProps","str","i","obj","split","JSON","stringify","slice","genChildren","el","map","child","gen","join","codegen","defaultTagRE","test","tokens","lastIndex","exec","index","trim","ast","code","cpmpileToFuntion","template","render","Function","createElement","vnode","createTextVNode","undefined","mountComponent","$el","_render","_update","patch","oldVNode","isRealElement","nodeType","parentEle","parentNode","newEle","createEle","insertBefore","nextSibling","removeChild","document","patchProps","appendChild","createTextNode","props","styleName","style","setAttribute","initLifeCycle","Vue","console","log","_c","arguments","_v","_s","initMixin","_init","options","$mount","querySelector","ops","outerHTML"],"mappings":"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"}